[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/fonts/douyuFont-2.otf" type="DynamicFontData" id=1]
[ext_resource path="res://StartButton.gd" type="Script" id=2]

[sub_resource type="Shader" id=20]
code = "shader_type canvas_item;

uniform float light: hint_range(1.0, 3.0) = 1.0;
uniform vec2 resolution = vec2(256.0, 64.0);
uniform float radius = 0.1;

float sat(float t) {
    return clamp(t, 0.0, 1.0);
}

float remap01(float a, float b, float t) {
    return sat((t - a) / (b - a));
}

float remap(float a, float b, float c, float d, float t) {
    return remap01(a, b, t) * (d - c) + c;
}

float rect(vec2 uv, vec2 size) {
    float blur = 0.000;
    // 让 size 成正比
    size = 0.5 - size * 0.5;
    // 先画一边
    vec2 r = vec2(step(size.x, uv.x), step(size.y, uv.y));
    // 再画相反的边，相乘得出相交位置就是对应的矩形
    r *= vec2(step(size.x, 1.0 - uv.x), step(size.y, 1.0 - uv.y));
    // x 和 y 相乘得出矩形的像素点值
    return r.x * r.y;
}

float circle(vec2 uv, float r) {
    uv -= 0.5;
    uv.x *= resolution.x / resolution.y;
    float blur = 0.005;
    
    // 用 uv 做长度,点距离零点的距离会呈圆形递增
    float d = length(uv);
    d = step(d, r);
    return d;
}


float round_rect(vec2 uv, float r) {
	float c1 = circle(uv+0.5-r, r);
	float c2 = circle(uv-0.5+r, r);
	float c3 = circle(vec2(uv.x+0.5-r, uv.y-0.5+r), r);
	float c4 = circle(vec2(uv.x-0.5+r, uv.y+0.5-r), r);

	float rect1 = rect(uv, vec2(1.0 - r * 1.5, 1.0 - r * 2.0));
	float rect2 = rect(uv, vec2(1.0- r *2.0, 1.0));

	float s = min(c1+c2+c3+c4+rect1+rect2, 1.0);
	return s;
}

void fragment() {
	vec4 col = vec4(0.27, 0.14, 0.01, 1.0) * light;
	vec2 uv = UV;

	float s = round_rect(uv, radius);
	col.a = s;
	
	
	float offset = 0.1;
	s = round_rect(uv*(1.0 + offset) - offset / 2.0, radius);
	col.rgb = mix(col.rgb, vec3(0.86, 0.59, 0.52), s) * light;
	
	offset = 0.2;
	s = round_rect(uv*(1.0 + offset) - offset / 2.0, radius);
	col.rgb = mix(col.rgb, vec3(0.65, 0.38, 0.26), s) * light;
//	uv *= 1.5;
//	uv -= 0.5;
//	s = round_rect(uv, radius);
//	col.rgb = mix(col.rgb, col.rgb*1.5, 1.0 - s); 
	
	COLOR = col;
}"

[sub_resource type="ShaderMaterial" id=21]
shader = SubResource( 20 )
shader_param/light = 1.0
shader_param/resolution = Vector2( 256, 64 )
shader_param/radius = 0.1

[sub_resource type="DynamicFont" id=19]
size = 24
font_data = ExtResource( 1 )

[node name="StartButton" type="Panel"]
material = SubResource( 21 )
margin_left = 537.0
margin_top = 281.0
margin_right = 777.0
margin_bottom = 389.0
mouse_default_cursor_shape = 2
script = ExtResource( 2 )

[node name="Label" type="Label" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
custom_fonts/font = SubResource( 19 )
text = "开始裁员!"
align = 1
valign = 1

[connection signal="gui_input" from="." to="." method="_on_StartButton_gui_input"]
[connection signal="mouse_entered" from="." to="." method="_on_StartButton_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_StartButton_mouse_exited"]
